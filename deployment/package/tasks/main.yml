- name: Download WAR package
  command: "wget -O {{application_dir}}/{{application_name}}/artifact/openlmis-web.war
    --auth-no-challenge
    --http-user={{jenkins_user}}
    --no-check-certificate
    --http-password=b5c5990592a49e0df211b0e704d3bdd0
    https://{{jenkins_host}}/job/Lmis-cubes-merge/{{BUILD_NO}}/artifact/open-lmis/modules/openlmis-web/build/libs/openlmis-web.war"
  when: region != 'prod-slave'

- name: Download WAR package for slave
  command: "wget -O {{application_dir}}/{{application_name}}/artifact/openlmis-web-slave.war
    --auth-no-challenge
    --http-user={{jenkins_user}}
    --no-check-certificate
    --http-password=b5c5990592a49e0df211b0e704d3bdd0
    https://{{jenkins_host}}/job/Lmis-cubes-merge/{{BUILD_NO}}/artifact/open-lmis/modules/openlmis-web/build/libs/openlmis-web-slave.war"
  when: region == 'prod-slave'

- name: Stop tomcat service
  service: name=tomcat state=stopped

- name: Move previous deployment artifact to artifact_last directory
  command: "mv {{application_dir}}/{{application_name}}/webapps/ROOT.war
  {{application_dir}}/{{application_name}}/artifact_last/"
  ignore_errors: yes
  sudo_user: middleware

- name: Move previous deployment cache
  command: "rm -rf {{application_dir}}/{{application_name}}/webapps/ROOT"
  sudo_user: middleware

- name: Copy current deployment artifact
  command: "cp {{application_dir}}/{{application_name}}/artifact/openlmis-web.war {{application_dir}}/{{application_name}}/webapps/ROOT.war"
  sudo_user: middleware
  when: region != 'prod-slave'

- name: Copy current deployment artifact
  command: "cp {{application_dir}}/{{application_name}}/artifact/openlmis-web-slave.war {{application_dir}}/{{application_name}}/webapps/ROOT.war"
  sudo_user: middleware
  when: region == 'prod-slave'

- name: Update application version in app properties
  command: "echo 'app.version={{BUILD_NO}}' >> {{application_dir}}/{{application_name}}/properties/app.properties"

- name: Step 6 > Restart tomcat service
  service: name=tomcat state=restarted

- name: Confirm application runs
  register: application_ok
  wait_for: port={{ http_port }}